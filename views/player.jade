//jade file for user's page
h1= title
p Welcome  #{title}
//holds view of game
div#battleship
//load script form server
script(src='/javascripts/battleship.js')

script(type='text/javascript').
    
    //start an instance of battleship on the client
    var game=new Battleship();

    //onclick function for when a player wants to take a shot
    function fire(tag)
    {   
        var x= tag.className.split(' ')[0].split('-')[1];
        var y= tag.className.split(' ')[0].split('-')[2];
        
        var player='#{title}';
        
        //ajax call to /fire gets data parses it, updates local game, redraws
        aj('http://#{global.server}:3000/fire/'+player+'/'+x+'/'+y,function(req){
            if (req.readyState==4)
            {
                if( req.status==200)
                {
                    var data=JSON.parse(req.responseText);
                    game.getHitConfirm(data);
                    game.render('battleship');
                    document.getElementsByTagName('body')[0].style.background='red'
                }
            }
        });
    }
    
    //socket to track server communications
    var socket;
    function init(){
        //connect to server
        socket=io.connect('http://#{global.server}:3000');
        //when connected do a hand shake
        socket.on('Welcome',function(data){
            //send player id to server
            socket.emit('Register',{id:"#{title}".slice(-1)});
        });

        //get serialized copy of the game
        socket.on('Game',function(data){
            //TODO nothing, jus a neat OOP bit here
            //add prototyp to game
            var proto=game.__proto__;
            game=data.game;
            game.__proto__=proto;
            game.render('battleship');
        });
        //register when you git hit
        socket.on('Shot',function(data)
        {
            //update client side game and redraw
            console.log(game.checkHit(data.x,data.y));
            game.render('battleship');
            document.getElementsByTagName('body')[0].style.background='green'
        });
    }

    //ajax call
    function aj(url,handler)
    {
        //code form w3schools.com
        var xmlhttp;

        if (window.XMLHttpRequest)
        {// code for IE7+, Firefox, Chrome, Opera, Safari
            xmlhttp=new XMLHttpRequest();
        }
        else
        {// code for IE6, IE5
            xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
        }
        xmlhttp.onreadystatechange=function(){handler(xmlhttp);}
      
        xmlhttp.open("GET",url,true);
        xmlhttp.send();
    }
    
   
   
    
